version: '3'
services:
  front:
    build:
      context: './backend' #Same for frontend
      dockerfile: Dockerfile
    ports:
      - 5500:5500
    container_name: node-container
    environment:
      - WATCHPACK_POLLING = true
    networks:
      - mern-stack-network
    volumes:
      - ./backend:/app
    # depends_on:
    #   - backend
    # backend:
    #   build:
    #     # context means folder of frontend or backend that we are targeting
    #     context: './backend or either frontend' 
    #     dockerfile: Dockerfile
    #   ports:
    #     - 5000:5000
    #   container_name: node-container_name
    #   environment:
    #     - WATCHPACK_POLLING = true
    #   networks:
    #     - mern-stack-network
    #   volumes:
    #     - ./backend or either frontend:/app
    #   depends_on:
    #     - mongo

    # mongo:
    #   image: mongo
    #   ports:
    #     - 27017:27017
    #   container_name: mongo-container_name
    #   networks:
    #     - mern-stack-network
    #   volumes:
    #     - mongoData:/data/db
    #   environment:
    #       - MONGO_INITDB_ROOT_USERNAME=<use .env file instead>
    #       - MONGO_INITDB_ROOT_PASSWORD=<use .env file instead>
    #       - MONGO_INITDB_DATABASE=ecom


    # Whole compose for networks
networks:
  mern-stack-network:
    driver: bridge

# volumes:
#   mongoData:
